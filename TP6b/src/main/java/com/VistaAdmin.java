/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package com;

import java.util.Arrays;
import java.util.TreeSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ulises
 */
public class VistaAdmin extends javax.swing.JInternalFrame {
    Producto productoSeleccionado = null;
    Integer filaSel = null;
    private static int c = 0;
    
    private DefaultTableModel modelo = new DefaultTableModel() {
        public boolean isCellEditable(int f, int c) {
            return false; // Todas las celdas no van a ser editables.
        }
    };
    /**
     * Creates new form VistaAdmin
     */
    public VistaAdmin() {
        initComponents();
        armarTabla();
        cargarCombos();
        btnGuardar.setEnabled(false);
        btnActualizar.setEnabled(false);
        btnEliminar.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        comboboxCategorias = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        inputCodigo = new javax.swing.JTextField();
        inputDescripcion = new javax.swing.JTextField();
        inputPrecio = new javax.swing.JTextField();
        inputComboBoxRubro = new javax.swing.JComboBox<>();
        inputSpinnerStock = new javax.swing.JSpinner();
        btnNuevo = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnReiniciar = new javax.swing.JButton();

        setClosable(true);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setText("Gestión de productos");

        comboboxCategorias.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboboxCategoriasItemStateChanged(evt);
            }
        });

        jLabel2.setText("Filtrar por categoría");

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabla);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        jLabel3.setText("Código");

        jLabel4.setText("Descripción");

        jLabel5.setText("Precio");

        jLabel6.setText("Rubro");

        jLabel7.setText("Stock");

        inputCodigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                inputCodigoKeyReleased(evt);
            }
        });

        inputDescripcion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                inputDescripcionKeyReleased(evt);
            }
        });

        inputPrecio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                inputPrecioKeyReleased(evt);
            }
        });

        inputComboBoxRubro.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                inputComboBoxRubroItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(inputCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(inputDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(inputSpinnerStock, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(inputPrecio, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                                .addComponent(inputComboBoxRubro, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(inputCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(inputDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(inputPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(inputComboBoxRubro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(inputSpinnerStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnReiniciar.setText("Reiniciar");
        btnReiniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReiniciarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(149, 149, 149)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(113, 113, 113)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(comboboxCategorias, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(btnNuevo)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnGuardar)
                                    .addGap(48, 48, 48)
                                    .addComponent(btnActualizar)
                                    .addGap(46, 46, 46)
                                    .addComponent(btnEliminar))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnReiniciar)))))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboboxCategorias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addComponent(btnReiniciar)))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNuevo)
                    .addComponent(btnGuardar)
                    .addComponent(btnActualizar)
                    .addComponent(btnEliminar))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        // TODO add your handling code here:        
        btnEliminar.setEnabled(false);
        btnActualizar.setEnabled(false);
        cargarTabla();
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
//        System.out.println(productoSeleccionado);
//        System.out.println(DeTodoSA.productos.size());
        DeTodoSA.productos.remove(productoSeleccionado);
//        System.out.println(DeTodoSA.productos.size());
        
        cargarTabla();
        btnEliminar.setEnabled(false);
        btnActualizar.setEnabled(false);
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void tablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaMouseClicked
        // TODO add your handling code here:
        btnActualizar.setEnabled(true);
        btnEliminar.setEnabled(true);
        btnGuardar.setEnabled(false);
        filaSel = tabla.getSelectedRow();
        
        productoSeleccionado = new Producto(
            (int) tabla.getValueAt(filaSel, 0),
            (String) tabla.getValueAt(filaSel, 1),
            (double) tabla.getValueAt(filaSel, 2),
            (int) tabla.getValueAt(filaSel, 4),
            (String) tabla.getValueAt(filaSel, 3)
        );
        
        System.out.println(productoSeleccionado);
        
    }//GEN-LAST:event_tablaMouseClicked

    private void btnReiniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReiniciarActionPerformed
        // TODO add your handling code here:
        inputCodigo.setText("");
        inputDescripcion.setText("");
        inputPrecio.setText("");
        inputComboBoxRubro.setSelectedItem(null);
        inputSpinnerStock.setValue(0);
        
        comboboxCategorias.setSelectedItem(null);
        btnEliminar.setEnabled(false);
        btnGuardar.setEnabled(false);
        cargarTabla();
    }//GEN-LAST:event_btnReiniciarActionPerformed

    private void inputCodigoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputCodigoKeyReleased
        // TODO add your handling code here:
        validarGuardar();
    }//GEN-LAST:event_inputCodigoKeyReleased

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        // TODO add your handling code here:
        String[] datos = datosActuales();
        
        // Modificar la tabla 
        // El stock no se cuenta como null, entonces pasa derecho
        for (int i=0; i<datos.length; i++) {
            if(datos[i] != null) {
                tabla.setValueAt(datos[i], filaSel, i);
            }
        }
        
        DeTodoSA.productos.remove(productoSeleccionado);
        
        if(datos[0] != null) productoSeleccionado.setCodigo(Integer.parseInt(datos[0]));
        if(datos[1] != null) productoSeleccionado.setDescripcion(datos[1]);
        if(datos[2] != null) productoSeleccionado.setPrecio(Double.parseDouble(datos[2]));
        if(datos[3] != null) productoSeleccionado.setRubro(datos[3]);
        if(datos[4] != null) productoSeleccionado.setStock(Integer.parseInt(datos[4]));
        
        // Borrar y agregar el producto seleccionado al TreeSet
        DeTodoSA.productos.add(productoSeleccionado);        
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void inputDescripcionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputDescripcionKeyReleased
        // TODO add your handling code here:
        validarGuardar();
    }//GEN-LAST:event_inputDescripcionKeyReleased

    private void inputPrecioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputPrecioKeyReleased
        // TODO add your handling code here:
        validarGuardar();
    }//GEN-LAST:event_inputPrecioKeyReleased

    private void inputComboBoxRubroItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_inputComboBoxRubroItemStateChanged
        // TODO add your handling code here:
        validarGuardar();
    }//GEN-LAST:event_inputComboBoxRubroItemStateChanged

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
        if(validarGuardar()) guardar();
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void comboboxCategoriasItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboboxCategoriasItemStateChanged
        // TODO add your handling code here

        // Tuve que hacer esto porque se me ejecutaba dos veces el codigo...
       
        c++;
        
        if(c % 2 != 0) {
            TreeSet<Producto> productosFiltrados = new TreeSet<>();
            for (Producto p : DeTodoSA.productos) {
                if (p.getRubro().equals((String) comboboxCategorias.getSelectedItem())) {
                    System.out.println(p);
                    productosFiltrados.add(p);
                }
            }
            
            cargarTablaFiltrada(productosFiltrados);
        }
    }//GEN-LAST:event_comboboxCategoriasItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnReiniciar;
    private javax.swing.JComboBox<String> comboboxCategorias;
    private javax.swing.JTextField inputCodigo;
    private javax.swing.JComboBox<String> inputComboBoxRubro;
    private javax.swing.JTextField inputDescripcion;
    private javax.swing.JTextField inputPrecio;
    private javax.swing.JSpinner inputSpinnerStock;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabla;
    // End of variables declaration//GEN-END:variables

    private void armarTabla() {
        modelo.addColumn("Código");
        modelo.addColumn("Descripción");
        modelo.addColumn("Precio");
        modelo.addColumn("Rubro");
        modelo.addColumn("Stock");
        tabla.setModel(modelo);
        
        modelo.setRowCount(0);
        cargarTabla();
    }
    
    private void cargarTabla() {
        modelo.setRowCount(0);
        
        for (Producto p : DeTodoSA.productos) {            
            modelo.addRow(new Object[]{
                p.getCodigo(),
                p.getDescripcion(),
                p.getPrecio(),
                p.getRubro(),
                p.getStock()
            });
        }
    }
    
    private void cargarTablaFiltrada(TreeSet<Producto> setDeProductos) {
        modelo.setRowCount(0);
        
        for (Producto p : setDeProductos) {            
            modelo.addRow(new Object[]{
                p.getCodigo(),
                p.getDescripcion(),
                p.getPrecio(),
                p.getRubro(),
                p.getStock()
            });
        }
    }
    
    private void cargarCombos() {
        comboboxCategorias.addItem(null);
        comboboxCategorias.addItem("Comestibles");
        comboboxCategorias.addItem("Limpieza");
        comboboxCategorias.addItem("Perfumeria");
        
        inputComboBoxRubro.addItem(null);
        inputComboBoxRubro.addItem("Comestibles");
        inputComboBoxRubro.addItem("Limpieza");
        inputComboBoxRubro.addItem("Perfumeria");
    }
    
    private String[] datosActuales() {
        // 0 - Codigo, 1 - Descripcion, 2 - Precio, 3 - Rubro, 4 - Stock
        boolean malCodigo = false, malPrecio = false;
        String codigo = null, precio = null;
        
        if(!inputCodigo.getText().equals("")) {
            try {
                codigo = Integer.parseInt(inputCodigo.getText())+"";
            } catch (NumberFormatException e) {
                malCodigo = true;
            }
        }
        
        if(!inputPrecio.getText().equals("")) {
            try {
                precio = Double.parseDouble(inputPrecio.getText())+"";
            } catch (NumberFormatException e) {
                malPrecio = true;
            }
        }
        
        if (malPrecio && malCodigo) {
            JOptionPane.showMessageDialog(this,"Ambos mal");
        } else if (malPrecio) {
            JOptionPane.showMessageDialog(this,"Mal precio");
        } else if (malCodigo) {
            JOptionPane.showMessageDialog(this,"Mal codigo");
        }
        
        if (malCodigo || malPrecio) return new String[]{null, null, null, null, null};

        String[] resultado = new String[] {
            codigo,
            inputDescripcion.getText().equals("") ? null : inputDescripcion.getText(),
            precio,
            (String) inputComboBoxRubro.getSelectedItem(),
            inputSpinnerStock.getValue()+""
        };
        
        return resultado;
    }
    
    private boolean validarGuardar() {        
        for (String s : datosActuales()) {
            if(s == null) {
                return false;
            }
        }
        
        btnGuardar.setEnabled(true);
        return true;
    }
    
    private void guardar() {
          String[] datos = datosActuales();
          Producto nuevoProducto = new Producto(
               Integer.parseInt(datos[0]),
               datos[1],
               Double.parseDouble(datos[2]),
               Integer.parseInt(datos[4]),
               datos[3]               
          );
          
          boolean anadir = true;
          for (Producto p : DeTodoSA.productos) {
              if (p.getCodigo() == nuevoProducto.getCodigo()) {
                  anadir = false;
                  break;
              }
          }
          
          if (anadir) {
              DeTodoSA.productos.add(nuevoProducto);
              cargarTabla();
          } else {
              JOptionPane.showMessageDialog(this,"Ese código ya existe para algún otro producto.");
          }
    }
    
//    private void validarActualizar() {
//        // Validar que este el codigo
//        boolean comp1 = datosActuales()[0] != null;        
//        
//        // Ver que haya alguna fila seleccionada
//        boolean comp2 = tabla.getSelectedRow() >= 0;
//        
//        if (comp1 && comp2) btnActualizar.setEnabled(true);
//    }
}
